{"ast":null,"code":"import _asyncToGenerator from \"/Users/tedwennerstrom/Development/Personal/Websites/Angular/weather-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./components/city-header/city-header.component\";\nimport * as i2 from \"./components/weather/weather.component\";\nimport * as i3 from \"@angular/common\";\n\nfunction AppComponent_app_weather_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-weather\", 6);\n  }\n\n  if (rf & 2) {\n    const weekday_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"data\", weekday_r1);\n  }\n}\n\nexport class AppComponent {\n  constructor() {\n    var _this = this;\n\n    this.title = 'weather-app';\n    this.week = [];\n    this.today = {};\n    this.cities = {\n      stockholm: 'latitude=59.3328&longitude=18.0645',\n      berlin: 'latitude=52.5235&longitude=13.4115',\n      washington: 'latitude=38.8921&longitude=-77.0241',\n      london: 'latitude=51.5002&longitude=-0.1262',\n      paris: 'latitude=48.8567&longitude=2.3510',\n      madrid: 'latitude=40.4167&longitude=-3.7033'\n    };\n    this.selectedCity = 'stockholm';\n    this.cityNames = Object.keys(this.cities);\n\n    this.selectCity = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (city) {\n        _this.selectedCity = city;\n        const weather = yield _this.getWeatherData();\n\n        _this.populateWeatherData(weather.daily);\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n\n  ngOnInit() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const weather = yield _this2.getWeatherData();\n\n      _this2.populateWeatherData(weather.daily);\n    })();\n  }\n\n  getWeatherData() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const rawData = yield fetch(`https://api.open-meteo.com/v1/forecast?${_this3.cities[_this3.selectedCity]}&daily=weathercode,temperature_2m_max&timezone=Europe%2FBerlin`);\n      const data = yield rawData.json();\n      return data;\n    })();\n  }\n\n  populateWeatherData(weather) {\n    this.today = {\n      day: 'today',\n      weather: weather.weathercode[0],\n      temperature: weather.temperature_2m_max[0]\n    };\n    this.week = []; // const week: Array<Object> = [];\n\n    for (let i = 1; i < 7; i++) {\n      this.week.push({\n        day: weather.time[i],\n        temperature: weather.temperature_2m_max[i],\n        weather: weather.weathercode[i]\n      });\n    }\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 8,\n  vars: 5,\n  consts: [[1, \"container\"], [3, \"selectedCity\", \"selectCity\", \"cities\"], [1, \"weather-container\"], [\"size\", \"large\", 3, \"data\"], [1, \"weather-week\"], [\"size\", \"small\", 3, \"data\", 4, \"ngFor\", \"ngForOf\"], [\"size\", \"small\", 3, \"data\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Weather\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"app-city-header\", 1);\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵelement(5, \"app-weather\", 3);\n      i0.ɵɵelementStart(6, \"div\", 4);\n      i0.ɵɵtemplate(7, AppComponent_app_weather_7_Template, 1, 1, \"app-weather\", 5);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"selectedCity\", ctx.selectedCity)(\"selectCity\", ctx.selectCity)(\"cities\", ctx.cityNames);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"data\", ctx.today);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.week);\n    }\n  },\n  directives: [i1.CityHeaderComponent, i2.WeatherComponent, i3.NgForOf],\n  styles: [\".weather-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: flex-start;\\n    justify-content: space-evenly;\\n    width: 100%;\\n    margin-top: 3rem;\\n}\\n\\n.weather-week[_ngcontent-%COMP%] {\\n    min-width: 24vw;\\n}\\n\\n@media screen and (max-width: 884px) {\\n    .weather-container[_ngcontent-%COMP%] {\\n        flex-direction: column;\\n        align-items: center;\\n    }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2Qiw2QkFBNkI7SUFDN0IsV0FBVztJQUNYLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSTtRQUNJLHNCQUFzQjtRQUN0QixtQkFBbUI7SUFDdkI7QUFDSiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi53ZWF0aGVyLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tdG9wOiAzcmVtO1xufVxuXG4ud2VhdGhlci13ZWVrIHtcbiAgICBtaW4td2lkdGg6IDI0dnc7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDg4NHB4KSB7XG4gICAgLndlYXRoZXItY29udGFpbmVyIHtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG59XG4iXX0= */\"]\n});","map":{"version":3,"sources":["/Users/tedwennerstrom/Development/Personal/Websites/Angular/weather-app/src/app/app.component.ts"],"names":["i0","i1","i2","i3","AppComponent_app_weather_7_Template","rf","ctx","ɵɵelement","weekday_r1","$implicit","ɵɵproperty","AppComponent","constructor","title","week","today","cities","stockholm","berlin","washington","london","paris","madrid","selectedCity","cityNames","Object","keys","selectCity","city","weather","getWeatherData","populateWeatherData","daily","ngOnInit","rawData","fetch","data","json","day","weathercode","temperature","temperature_2m_max","i","push","time","ɵfac","AppComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","AppComponent_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","ɵɵadvance","directives","CityHeaderComponent","WeatherComponent","NgForOf","styles"],"mappings":"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","sourcesContent":["import * as i0 from \"@angular/core\";\nimport * as i1 from \"./components/city-header/city-header.component\";\nimport * as i2 from \"./components/weather/weather.component\";\nimport * as i3 from \"@angular/common\";\nfunction AppComponent_app_weather_7_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelement(0, \"app-weather\", 6);\n} if (rf & 2) {\n    const weekday_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"data\", weekday_r1);\n} }\nexport class AppComponent {\n    constructor() {\n        this.title = 'weather-app';\n        this.week = [];\n        this.today = {};\n        this.cities = {\n            stockholm: 'latitude=59.3328&longitude=18.0645',\n            berlin: 'latitude=52.5235&longitude=13.4115',\n            washington: 'latitude=38.8921&longitude=-77.0241',\n            london: 'latitude=51.5002&longitude=-0.1262',\n            paris: 'latitude=48.8567&longitude=2.3510',\n            madrid: 'latitude=40.4167&longitude=-3.7033',\n        };\n        this.selectedCity = 'stockholm';\n        this.cityNames = Object.keys(this.cities);\n        this.selectCity = async (city) => {\n            this.selectedCity = city;\n            const weather = await this.getWeatherData();\n            this.populateWeatherData(weather.daily);\n        };\n    }\n    async ngOnInit() {\n        const weather = await this.getWeatherData();\n        this.populateWeatherData(weather.daily);\n    }\n    async getWeatherData() {\n        const rawData = await fetch(`https://api.open-meteo.com/v1/forecast?${this.cities[this.selectedCity]}&daily=weathercode,temperature_2m_max&timezone=Europe%2FBerlin`);\n        const data = await rawData.json();\n        return data;\n    }\n    populateWeatherData(weather) {\n        this.today = {\n            day: 'today',\n            weather: weather.weathercode[0],\n            temperature: weather.temperature_2m_max[0],\n        };\n        this.week = [];\n        // const week: Array<Object> = [];\n        for (let i = 1; i < 7; i++) {\n            this.week.push({\n                day: weather.time[i],\n                temperature: weather.temperature_2m_max[i],\n                weather: weather.weathercode[i],\n            });\n        }\n    }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) { return new (t || AppComponent)(); };\nAppComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AppComponent, selectors: [[\"app-root\"]], decls: 8, vars: 5, consts: [[1, \"container\"], [3, \"selectedCity\", \"selectCity\", \"cities\"], [1, \"weather-container\"], [\"size\", \"large\", 3, \"data\"], [1, \"weather-week\"], [\"size\", \"small\", 3, \"data\", 4, \"ngFor\", \"ngForOf\"], [\"size\", \"small\", 3, \"data\"]], template: function AppComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2, \"Weather\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"app-city-header\", 1);\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelement(5, \"app-weather\", 3);\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵtemplate(7, AppComponent_app_weather_7_Template, 1, 1, \"app-weather\", 5);\n        i0.ɵɵelementEnd()()();\n    } if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"selectedCity\", ctx.selectedCity)(\"selectCity\", ctx.selectCity)(\"cities\", ctx.cityNames);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"data\", ctx.today);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.week);\n    } }, directives: [i1.CityHeaderComponent, i2.WeatherComponent, i3.NgForOf], styles: [\".weather-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    align-items: flex-start;\\n    justify-content: space-evenly;\\n    width: 100%;\\n    margin-top: 3rem;\\n}\\n\\n.weather-week[_ngcontent-%COMP%] {\\n    min-width: 24vw;\\n}\\n\\n@media screen and (max-width: 884px) {\\n    .weather-container[_ngcontent-%COMP%] {\\n        flex-direction: column;\\n        align-items: center;\\n    }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2Qiw2QkFBNkI7SUFDN0IsV0FBVztJQUNYLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSTtRQUNJLHNCQUFzQjtRQUN0QixtQkFBbUI7SUFDdkI7QUFDSiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi53ZWF0aGVyLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tdG9wOiAzcmVtO1xufVxuXG4ud2VhdGhlci13ZWVrIHtcbiAgICBtaW4td2lkdGg6IDI0dnc7XG59XG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDg4NHB4KSB7XG4gICAgLndlYXRoZXItY29udGFpbmVyIHtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICB9XG59XG4iXX0= */\"] });\n"]},"metadata":{},"sourceType":"module"}